# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.81.0"

default_platform :ios

def set_bundle_id(id)
  ENV["FASTLANE_APP_IDENTIFIER"] = id
end

platform :ios do

  before_all do
    ADHOC_APP_ID = ENV["FASTLANE_APP_IDENTIFIER"] + ".adhoc"
    DEV_APP_ID = ENV["FASTLANE_APP_IDENTIFIER"] + ".dev"
    BUILD_LOG_PATH = "Build/build_logs"
    DERIVED_DATA_PATH = "Build/DerivedData"
    BUILD_PATH = "Build"
    ARCHIVE_PATH = "Build/Archive"
    workspace = "safe.xcworkspace"
    ENV["GYM_WORKSPACE"] = workspace
    ENV["SCAN_WORKSPACE"] = workspace
    PROJECT = "safe/safe.xcodeproj"
  end

  desc "Runs unit tests"
  lane :test do
    set_bundle_id DEV_APP_ID
    run_tests(scheme: "safe", 
      configuration: "Debug", 
      skip_build: true, 
      buildlog_path: BUILD_LOG_PATH,
      skip_slack: true, 
      derived_data_path: DERIVED_DATA_PATH)
  end
  
  desc "Runs UI tests"
  lane :ui_test do
    set_bundle_id DEV_APP_ID
    run_tests(scheme: "allUITests", 
      configuration: "Debug", 
      skip_build: true, 
      buildlog_path: BUILD_LOG_PATH, 
      slack_only_on_failure: true, 
      derived_data_path: DERIVED_DATA_PATH)
  end

  desc "Build and distribute build to Fabric Beta"
  lane :fabric do
    if is_ci
      setup_travis
      increment_build_number(build_number: ENV["TRAVIS_BUILD_NUMBER"],
        xcodeproj: PROJECT)
      test
      ui_test
    end
    set_bundle_id ADHOC_APP_ID
    match(type: "adhoc", app_identifier: ADHOC_APP_ID)
    gym(configuration: "AdHoc", 
      scheme: "safe", 
      buildlog_path: BUILD_LOG_PATH,
      derived_data_path: DERIVED_DATA_PATH,
      build_path: BUILD_PATH,
      archive_path: ARCHIVE_PATH)
    crashlytics(groups: "ios-beta-testers", notifications: false)
    slack(
     message: "Successfully distributed new version to Fabric beta :rocket:",
    )
  end

  lane :add_devices do
    register_devices(devices_file: "../gnosis-ios-certificates/devices.txt")
    match(type: "adhoc", app_identifier: ADHOC_APP_ID, force_for_new_devices: true)
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    xcversion(version: "9.3")
    match(type: "appstore", app_identifier: ENV["FASTLANE_APP_IDENTIFIER"])
    gym(scheme: "safe", 
      include_symbols: true,
      include_bitcode: true,
      buildlog_path: BUILD_LOG_PATH,
      derived_data_path: DERIVED_DATA_PATH,
      build_path: BUILD_PATH,
      archive_path: ARCHIVE_PATH)
    pilot(skip_waiting_for_build_processing: true)
    slack(
     message: "Successfully distributed new version to TestFlight :rocket:",
    )
  end

  lane :certificates do |options|
    is_readonly = !options[:force]
    match(type: "appstore", app_identifier: ENV["FASTLANE_APP_IDENTIFIER"], readonly: is_readonly)
    set_bundle_id DEV_APP_ID
    match(type: "development", app_identifier: DEV_APP_ID, readonly: is_readonly)
    set_bundle_id ADHOC_APP_ID
    match(type: "adhoc", app_identifier: ADHOC_APP_ID, readonly: is_readonly)
  end

  error do |lane, exception|
    slack(
      message: exception.message,
      success: false
    )
    puts `cat #{BUILD_LOG_PATH/safe-safe.log}`
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded. 
# Learn more at https://github.com/fastlane/fastlane#metrics
