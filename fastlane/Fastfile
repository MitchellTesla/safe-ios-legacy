# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.81.0"

default_platform :ios

platform :ios do

  before_all do
    ADHOC_APP_ID = ENV["FASTLANE_APP_IDENTIFIER_ADHOC"]
    BUILD_LOG_PATH = "build_logs"
  end

  desc "Runs all the tests"
  lane :test do
    scan(scheme: "safe", configuration: "Debug", skip_build: true, buildlog_path: BUILD_LOG_PATH)
  end

  desc "Build and distribute build to Fabric Beta"
  lane :fabric do
    if is_ci
      setup_travis
      increment_build_number(build_number: ENV["TRAVIS_BUILD_NUMBER"])
    end
    ENV["FASTLANE_APP_IDENTIFIER"] = ADHOC_APP_ID
    match(type: "adhoc", app_identifier: ADHOC_APP_ID)
    gym(configuration: "AdHoc", scheme: "safe", buildlog_path: BUILD_LOG_PATH)
    crashlytics(groups: "iOS Beta Testers")
    #slack(
    #  message: "Successfully distributed new version to beta :rocket:",
    #)
  end

  lane :add_devices do
    register_devices(devices_file: "../gnosis-ios-certificates/devices.txt")
    match(type: "adhoc", app_identifier: ADHOC_APP_ID, force_for_new_devices: true)
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    xcversion(version: "~> 9.0")
    match(type: "appstore") # more information: https://codesigning.guide
    gym(scheme: "safe", 
        include_symbols: true,
        include_bitcode: true)
    pilot(skip_waiting_for_build_processing: true)
    #slack(
    #  message: "Successfully distributed new version to TestFlight :rocket:",
    #)
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
    puts `cat #{BUILD_LOG_PATH/safe-safe.log}`
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded. 
# Learn more at https://github.com/fastlane/fastlane#metrics
